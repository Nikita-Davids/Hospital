@model Hospital.Models.PatientCurrentMedication

@{
    ViewData["Title"] = "Add Current Medication";
    Layout = "~/Views/Shared/_LayoutNurse.cshtml";
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
}

<style>
    h1 {
        text-align: center;
        color: #08075F;
        font-weight: bold;
        text-decoration: underline;
    }

    .button {
        padding: 9px 50px;
        font-size: 16px;
        background-color: #08075F;
        color: white;
        border: none;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease;
    }

        .button:hover {
            background-color: #FFDE59;
            color: #08075F;
        }

    .box {
        border: 1px solid #ccc;
        padding: 20px;
        margin: 40px auto;
        width: 60%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        width: 100%;
    }

    .medication-row {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
        border-radius: 5px;
        background-color: #f9f9f9;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .medication-row .remove-medication-btn {
            background-color: #721c24;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            font-size: 13px;
        }

            .medication-row .remove-medication-btn:hover {
                background-color: #f5c6cb;
            }

            .medication-row .remove-medication-btn:disabled {
                cursor: not-allowed;
                opacity: 0.5;
            }

    .button-container {
        text-align: right; /* Aligns button container to the right */
    }

</style>

@if (TempData["SuccessMessage"] != null)

{
    <div id="successMessage" class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["AlertMessage"] != null)

{
    <div class="alert alert-danger">
        @TempData["AlertMessage"]
    </div>
}

<h1>@ViewData["Title"]</h1>

<hr />
<div class="form-container">
    <form id="medicationForm" asp-action="NurseAddCurrentMedication" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group">
            <label class="control-label">Patient Name</label>
            <input type="text" value="@ViewBag.SelectedPatientName" class="form-control" readonly />
            <input type="hidden" name="PatientId" value="@Model.PatientId" />
        </div>

        <div class="form-group">
            <label class="control-label">Select Medication</label>
            <select id="medicationDropdown" class="form-control">
                <option value="">Select Medication</option>
                @foreach (var medication in ViewBag.ChronicMedicationId)
                {
                    <option value="@medication.Value">@medication.Text</option>
                }
            </select>
            <span asp-validation-for="CurrentMedication" class="text-danger"></span>
        </div>

        <div class="form-group">
            <button type="button" class="btn btn-primary" id="addMedicationBtn">
                <i class="fas fa-plus"></i> Add Medication
            </button>
        </div>

        <div class="form-group">
            <label class="control-label">Medications List</label>
            <div id="medicationsList">
                <!-- Medications will be listed here -->
            </div>
            <input type="hidden" id="medicationsInput" name="CurrentMedication" />
        </div>

        <div class="button-container">
            <input type="submit" value="Save All Medications" class="button" />
        </div>
    </form>
</div>
<div class="button-container">
    <a class="btn-link" asp-action="NurseViewPatientCurrentMedication">View Current Medication</a>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var medications = []; // Array to store added medications
        var medicationDropdown = document.getElementById("medicationDropdown");
        var medicationsList = document.getElementById("medicationsList");
        var medicationsInput = document.getElementById("medicationsInput");

        // Event listener for the "Add Medication" button
        document.getElementById("addMedicationBtn").addEventListener("click", function () {
            var selectedMedication = medicationDropdown.value;

            if (selectedMedication) {
                // Check if the medication is already in the medications array
                if (medications.includes(selectedMedication.toLowerCase())) {
                    alert("This medication is already added to the list.");
                } else {
                    // Add medication to the array
                    medications.push(selectedMedication.toLowerCase());

                    // Create a row for the selected medication
                    var medicationRow = document.createElement("div");
                    medicationRow.className = "medication-row";
                    medicationRow.textContent = selectedMedication;

                    // Create a remove button for the medication row
                    var removeBtn = document.createElement("button");
                    removeBtn.textContent = "Remove";
                    removeBtn.className = "remove-medication-btn";
                    removeBtn.addEventListener("click", function () {
                        // Remove the medication from the array and update the list
                        medications = medications.filter(function (med) {
                            return med !== selectedMedication.toLowerCase();
                        });
                        medicationRow.remove();
                        updateMedicationsInput();
                    });

                    // Append the remove button to the medication row
                    medicationRow.appendChild(removeBtn);
                    medicationsList.appendChild(medicationRow);

                    // Update the hidden input to pass the medications to the server
                    updateMedicationsInput();

                    // Clear the dropdown
                    medicationDropdown.value = "";
                }
            } else {
                alert("Please select a medication first.");
            }
        });

        // Function to update the hidden input value with the list of medications
        function updateMedicationsInput() {
            medicationsInput.value = medications.join("\n");
        }
    });
</script>
