@model IEnumerable<Hospital.Models.PatientVital>

@{
    ViewData["Title"] = "View Patient Vitals";

    Layout = "~/Views/Shared/_LayoutNurse.cshtml";
}

<h1 class="text-center mb-4">@ViewData["Title"]</h1>

<!-- Search box -->
<div class="mb-3">
    <input type="text"
           id="searchInput"
           onkeyup="searchTable()"
           placeholder="Search patient vitals..."
           class="form-control" />
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered" id="patientVitalTable">
        <thead class="thead-dark">
            <tr>
                <th>Patient Name</th>
                <th>@Html.DisplayNameFor(model => model.Weight)</th>
                <th>@Html.DisplayNameFor(model => model.Height)</th>
                <th>@Html.DisplayNameFor(model => model.BMI)</th>
                <th>@Html.DisplayNameFor(model => model.Tempreture)</th>
                <th>@Html.DisplayNameFor(model => model.BloodPressure)</th>
                <th>@Html.DisplayNameFor(model => model.Pulse)</th>
                <th>@Html.DisplayNameFor(model => model.Respiratory)</th>
                <th>@Html.DisplayNameFor(model => model.BloodOxygen)</th>
                <th>@Html.DisplayNameFor(model => model.BloodGlucoseLevel)</th>
                <th>@Html.DisplayNameFor(model => model.VitalTime)</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Patient.PatientName @item.Patient.PatientSurname</td>
                    <td>@Html.DisplayFor(modelItem => item.Weight)</td>
                    <td>@Html.DisplayFor(modelItem => item.Height)</td>
                    <td>@Html.DisplayFor(modelItem => item.BMI)</td>
                    <td>@Html.DisplayFor(modelItem => item.Tempreture)</td>
                    <td>@Html.DisplayFor(modelItem => item.BloodPressure)</td>
                    <td>@Html.DisplayFor(modelItem => item.Pulse)</td>
                    <td>@Html.DisplayFor(modelItem => item.Respiratory)</td>
                    <td>@Html.DisplayFor(modelItem => item.BloodOxygen)</td>
                    <td>@Html.DisplayFor(modelItem => item.BloodGlucoseLevel)</td>
                    <td>@Html.DisplayFor(modelItem => item.VitalTime)</td>
                    <td>
                        <a class="btn btn-sm btn-primary" asp-action="NurseEditPatientVital" asp-route-id="@item.PatientVitalId">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function searchTable() {
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("searchInput");
        filter = input.value.toLowerCase();
        table = document.getElementById("patientVitalTable");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) { // Start at 1 to skip table header
            tr[i].style.display = "none"; // Hide the row initially
            td = tr[i].getElementsByTagName("td");

            for (j = 0; j < td.length; j++) { // Loop through columns
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toLowerCase().indexOf(filter) > -1) {
                        tr[i].style.display = ""; // Show the row if a match is found
                        break; // Stop searching the rest of the columns in this row
                    }
                }
            }
        }
    }
</script>
