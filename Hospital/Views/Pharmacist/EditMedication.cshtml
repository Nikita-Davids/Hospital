@model Hospital.Models.Medication

@{
    Layout = "~/Views/Shared/_LayoutPharmacist.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="errorMessage" class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var successMessage = document.getElementById("successMessage");
        if (successMessage) {
            successMessage.style.display = "block";
            setTimeout(function () {
                successMessage.style.display = "none";
            }, 3000);
        }

        var errorMessage = document.getElementById("errorMessage");
        if (errorMessage) {
            errorMessage.style.display = "block";
            setTimeout(function () {
                errorMessage.style.display = "none";
            }, 3000);
        }
    });

    $(document).ready(function () {
        $('#medicationForm').on('submit', function (event) {
            var reorderLevel = $('#ReOrderLevel').val();
            if (reorderLevel < 1 || reorderLevel > 10000) {
                alert("ReOrderLevel must be greater than 0 and less than 10,000.");
                event.preventDefault(); // Prevent form submission
            }
        });
    });
</script>

<style>
    h1 {
        text-align: center;
        color: #08075F;
        font-weight: bold;
        text-decoration: underline;
    }

    h4 {
        color: #08075F;
        font-weight: bold;
    }

    .btn-link {
        background-color: #08075F;
        color: white;
        border: none;
        padding: 5px 10px;
        text-decoration: none;
        cursor: pointer;
        font-size: 13px;
        float: left;
    }

        .btn-link:hover {
            background-color: #FFDE59;
            border: none;
        }

    .form-border {
        border: 2px solid #ccc;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        background-color: #f9f9f9;
    }

    .form-control {
        border-radius: 5px;
    }

    .btn-primary {
        background-color: #08075F;
        border: none;
        color: white;
    }

        .btn-primary:hover {
            background-color: #FFDE59;
        }

    .small-input {
        width: 250px;
    }

    .shift-right {
        margin-left: 80px;
    }

    .text-danger {
        color: red;
    }

    .list-group-item {
        position: relative;
    }

    .remove-ingredient {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
    }

    .text-right {
        text-align: right;
    }

    #ingredientErrorMessage {
        color: red;
        margin-top: 10px;
        display: none; /* Hide initially */
    }

    h4 {
        color: #08075F;
        font-weight: bold;
        margin-bottom: 20px; /* Adds more space below the form headings */
    }

    .form-group {
        margin-bottom: 15px; /* Adds space between form fields */
    }

</style>

<h1>Edit Medication</h1>

<hr />
<div class="row">
    <div class="col-md-6 offset-md-3 form-border">
        <form id="medicationForm" asp-action="EditMedication" asp-route-id="@Model.MedicationId" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MedicationName" class="control-label">Medication Name:</label>
                <input asp-for="MedicationName" class="form-control" />
                <span asp-validation-for="MedicationName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DosageForm" class="control-label">Dosage Form:</label>
                <select asp-for="DosageForm" class="form-control" asp-items="ViewBag.DosageForms"></select>
                <span asp-validation-for="DosageForm" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Schedule" class="control-label">Schedule:</label>
                <select asp-for="Schedule" class="form-control">
                    <option value="">Select Schedule</option>
                    <option value="Schedule 1">Schedule 1</option>
                    <option value="Schedule 2">Schedule 2</option>
                    <option value="Schedule 3">Schedule 3</option>
                    <option value="Schedule 4">Schedule 4</option>
                    <option value="Schedule 5">Schedule 5</option>
                    <option value="Schedule 6">Schedule 6</option>
                    <option value="Schedule 7">Schedule 7</option>
                </select>
                <span asp-validation-for="Schedule" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReOrderLevel" class="control-label">Re-order level:</label>
                <input asp-for="ReOrderLevel" class="form-control" min="1" max="10000" required />
                <span asp-validation-for="ReOrderLevel" class="text-danger"></span>
                <!-- Hidden error message that appears when input is invalid -->
                <span id="reorderLevelError" class="text-danger" style="display:none;">Re-Order Level must be between 1 and 10,000.</span>
            </div>

            <!-- Active Ingredients Section -->
            <div class="form-group">
                <label class="control-label">Active Ingredient:</label>
                <select id="ingredientDropdown" class="form-control">
                    <option value="">Select New Active Ingredient</option>
                    @foreach (var ingredient in ViewBag.Ingredients as IEnumerable<SelectListItem>)
                    {
                        <option value="@ingredient.Value">@ingredient.Text</option>
                    }
                </select>
                <span asp-validation-for="MedicationActiveIngredients" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Strength:</label>
                <select id="strengthDropdown" class="form-control">
                    <option value="">Select A New Strength</option>
                </select>
            </div>
            <br />
            <div class="form-group">
                <button type="button" id="addIngredientButton" class="btn btn-primary">Add New Ingredient</button>
            </div>
            <br />

            <!-- Combined Ingredients Display -->
            <div class="form-group">
                <label class="control-label">Combined Active Ingredients</label>
                <ul id="ingredientsList" class="list-group">
                    <!-- Existing ingredients will be listed here -->
                </ul>
                <input type="hidden" name="CombinedIngredientsHidden" id="CombinedIngredientsHidden" value="@Model.MedicationActiveIngredients" />
            </div>
            <br />
            <div id="ingredientErrorMessage" class="text-danger">Please add at least one active ingredient before saving.</div>

            <div class="form-group text-right">
                <input type="submit" value="Save Medication" id="saveMedicationButton" class="btn btn-primary" />
            </div>

            <div class="form-group text-center">
                <a class="btn-link" asp-controller="Pharmacist" asp-action="ViewAddMedication">Back to List</a>
            </div>
        </form>
    </div>
</div>
<br />
<br />

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var ingredientStrengths = @Html.Raw(Json.Serialize(ViewBag.IngredientStrengths));
        var existingIngredients = @Html.Raw(Json.Serialize(Model.MedicationActiveIngredients));

        function populateStrengths(ingredientName) {
            var $strengthDropdown = $('#strengthDropdown');
            $strengthDropdown.empty();
            $strengthDropdown.append('<option value="">Select Strength</option>');

            if (ingredientStrengths[ingredientName]) {
                $.each(ingredientStrengths[ingredientName], function (index, value) {
                    $strengthDropdown.append('<option value="' + value + '">' + value + '</option>');
                });
            }
        }

        function updateIngredientList() {
            var $ingredientsList = $('#ingredientsList');
            var combinedList = $('#CombinedIngredientsHidden').val().split(', ').filter(Boolean);

            $ingredientsList.empty();
            $.each(combinedList, function (index, item) {
                $ingredientsList.append('<li class="list-group-item" data-index="' + index + '">' + item + ' <button type="button" class="btn btn-danger btn-sm remove-ingredient" data-index="' + index + '">Remove</button></li>');
            });

            // Enable/disable the Save Medication button based on whether the combined ingredients list is populated
            if (combinedList.length > 0) {
                $('#saveMedicationButton').prop('disabled', false);
                $('#ingredientErrorMessage').hide(); // Hide error message if ingredients are present
            } else {
                $('#saveMedicationButton').prop('disabled', true);
                $('#ingredientErrorMessage').show(); // Show error message if no ingredients
            }
        }

        $('#ingredientDropdown').change(function () {
            var ingredientName = $(this).val();
            populateStrengths(ingredientName);
        });

        $('#addIngredientButton').click(function () {
            var ingredientName = $('#ingredientDropdown').val();
            var strength = $('#strengthDropdown').val();

            if (ingredientName && strength) {
                var combinedList = $('#CombinedIngredientsHidden').val().split(', ').filter(Boolean);
                combinedList.push(ingredientName + ' - ' + strength);
                $('#CombinedIngredientsHidden').val(combinedList.join(', '));

                updateIngredientList();
                $('#ingredientDropdown').val(''); // Reset dropdown
                $('#strengthDropdown').val(''); // Reset dropdown
            } else {
                alert("Please select both an ingredient and a strength.");
            }
        });

        // Remove ingredient on button click
        $(document).on('click', '.remove-ingredient', function () {
            var index = $(this).data('index');
            var combinedList = $('#CombinedIngredientsHidden').val().split(', ').filter(Boolean);
            combinedList.splice(index, 1); // Remove ingredient
            $('#CombinedIngredientsHidden').val(combinedList.join(', '));

            updateIngredientList();
        });

        // Initialize the ingredient list on page load
        updateIngredientList();
    });
    $(document).ready(function () {
        $('#medicationForm').on('submit', function (event) {
            var reorderLevel = parseInt($('#ReOrderLevel').val(), 10);  // Convert to number
            var reorderLevelError = $('#reorderLevelError');

            // Check if the value is outside the valid range
            if (isNaN(reorderLevel) || reorderLevel < 1 || reorderLevel > 10000) {
                reorderLevelError.text("ReOrderLevel must be between 1 and 10,000.");
                reorderLevelError.show();  // Show the error message in red
                event.preventDefault();    // Prevent form submission
            } else {
                reorderLevelError.hide();  // Hide the error message when valid
            }
        });

        // Optional: Add real-time validation when user types
        $('#ReOrderLevel').on('input', function () {
            var reorderLevel = parseInt($(this).val(), 10);  // Convert to number
            var reorderLevelError = $('#reorderLevelError');

            if (isNaN(reorderLevel) || reorderLevel < 1 || reorderLevel > 10000) {
                reorderLevelError.show();  // Show the error message in red
            } else {
                reorderLevelError.hide();  // Hide the error message when valid
            }
        });
    });

</script>
