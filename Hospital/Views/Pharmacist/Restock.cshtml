@model Hospital.Models.Restock

@{
    Layout = "~/Views/Shared/_LayoutPharmacist.cshtml";
}

<style>
    h1 {
        text-align: center;
        color: #08075F;
        font-weight: bold;
        text-decoration: underline;
    }

    .btn-primary {
        padding: 10px 60px;
        font-size: 16px;
        background-color: #08075F;
        color: white;
        border: none;
        cursor: pointer;
        font-weight: bold;
        transition: background-color 0.3s ease;
        float: right;
    }

        .btn-primary:hover {
            background-color: #FFDE59;
            color: #08075F;
        }

    .btn-link {
        background-color: #08075F;
        color: white;
        border: none;
        padding: 5px 10px;
        text-decoration: none;
        cursor: pointer;
        font-size: 13px;
    }

        .btn-link:hover {
            background-color: #FFDE59;
        }

    .button-container {
        text-align: right; /* Aligns button container to the right */
    }

    .alert-success {
        margin-top: 20px;
    }
</style>

<h1>Restock Medication</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert" id="successMessage">
        @TempData["SuccessMessage"]
    </div>
}

<hr />

<div class="row">
    <div class="col-md-6 offset-md-3">
        <div class="border p-4 rounded" style="border-color: #007bff;">
            <form asp-action="Restock">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="form-group">
                    <label asp-for="MedicationName" class="control-label">Medication Name:</label>
                    <select asp-for="MedicationName" class="form-control" asp-items="ViewBag.Medication" id="medicationDropdown">
                        <option value="">Select Medication</option>
                    </select>
                    <span asp-validation-for="MedicationName" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="DosageForm" class="control-label">Dosage Form:</label>
                    <select asp-for="DosageForm" class="form-control" id="dosageFormDropdown">
                        <option value="">Select Dosage Form</option>
                    </select>
                    <span asp-validation-for="DosageForm" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="QuantityReceived" class="control-label">Quantity Received</label>
                    <input asp-for="QuantityReceived" class="form-control" id="quantityReceived" min="1" max="10000" type="number" required />
                    <span asp-validation-for="QuantityReceived" class="text-danger" id="quantityError"></span>
                </div>

                <div class="form-group">
                    <label asp-for="RestockDate" class="control-label">Restock Date and Time</label>
                    <input asp-for="RestockDate" class="form-control" id="restockDateInput" type="datetime-local" />
                    <span asp-validation-for="RestockDate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input asp-for="MedicationId" type="hidden" id="medicationIdTextbox" />
                </div>
                <br />

                <div class="form-group">
                    <input type="submit" value="Restock" class="btn btn-primary" />
                </div>
                <br />
                <br />
            </form>
        </div>
    </div>
</div>

<br />
<div class="button-container">
    <a class="btn-link" asp-action="ViewRestock">View List of Restocked Medication</a>
</div>
<br />
<br />

@section Scripts {
    <script type="text/javascript">
        // Automatically hide the success message after 3 seconds
        window.onload = function () {
            var successMessage = document.getElementById('successMessage');
            if (successMessage) {
                setTimeout(function () {
                    successMessage.style.display = 'none';
                }, 3000); // 3000 milliseconds = 3 seconds
            }
        };

        // JavaScript to update DosageForm dropdown based on selected MedicationName
        document.getElementById('medicationDropdown').addEventListener('change', function () {
            var selectedMedication = this.value;
            var dosageForms = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.DosageForms));
            var dosageFormDropdown = document.getElementById('dosageFormDropdown');
            dosageFormDropdown.innerHTML = '<option value="">Select Dosage Form</option>'; // Reset DosageForm dropdown

            if (selectedMedication && dosageForms[selectedMedication]) {
                dosageForms[selectedMedication].forEach(function (dosageForm) {
                    var option = document.createElement('option');
                    option.value = dosageForm;
                    option.text = dosageForm;
                    dosageFormDropdown.appendChild(option);
                });
            }
        });

        // JavaScript to update MedicationId textbox based on selected MedicationName and DosageForm
        document.getElementById('dosageFormDropdown').addEventListener('change', function () {
            var selectedMedication = document.getElementById('medicationDropdown').value;
            var selectedDosageForm = this.value;

            if (selectedMedication && selectedDosageForm) {
                $.ajax({
                    url: '@Url.Action("GetMedicationId", "Pharmacist")', // Update with the correct controller name
                    type: 'GET',
                    data: { medicationName: selectedMedication, dosageForm: selectedDosageForm },
                    success: function (data) {
                        document.getElementById('medicationIdTextbox').value = data;
                    },
                    error: function (xhr, status, error) {
                        console.error('Error occurred:', status, error);
                    }
                });
            }
        });

        // Set current date and time, and prevent past dates and times in RestockDate field
        document.addEventListener("DOMContentLoaded", function () {
            var now = new Date();
            var currentDateTime = now.toISOString().slice(0, 16); // Get the date and time in yyyy-MM-ddTHH:MM format
            var restockDateInput = document.getElementById('restockDateInput');

            // Set the current date and time in the input
            restockDateInput.value = currentDateTime;

            // Prevent selecting past dates and times
            restockDateInput.setAttribute('min', currentDateTime);
        });

        // Custom validation for QuantityReceived input
        document.getElementById('quantityReceived').addEventListener('input', function () {
            var quantity = this.value;
            var quantityError = document.getElementById('quantityError');

            if (quantity < 1 || quantity > 10000) {
                quantityError.textContent = 'Quantity received must be between 1 and 10,000.';
            } else {
                quantityError.textContent = ''; // Clear the error message if input is valid
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
