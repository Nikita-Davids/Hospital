@model Hospital.Models.PatientVital

@{
    ViewData["Title"] = "Add Patient Vitals";
    Layout = "~/Views/Shared/_LayoutSurgeon.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["AlertMessage"]
    </div>
}


<h1>@ViewData["Title"]</h1>

<div class="form-container">
    <form asp-action="SurgeonAddPatientVital">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="PatientId" class="control-label">Patient ID</label>
            <select asp-for="PatientId" class="form-control" asp-items="ViewBag.PatientId"></select>
        </div>
        <div class="form-group">
            <label asp-for="Weight" class="control-label"></label>
            <input asp-for="Weight" class="form-control" />
            <span asp-validation-for="Weight" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Height" class="control-label"> Height in (m)</label>
            <input asp-for="Height" class="form-control" />
            <span asp-validation-for="Height" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BMI" class="control-label"></label>
            <input asp-for="BMI" class="form-control" id="BMI" readonly step="0,01" />
            <span asp-validation-for="BMI" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Tempreture" class="control-label"></label>
            <input asp-for="Tempreture" class="form-control" id="TemperatureInput" />
            <span asp-validation-for="Tempreture" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BloodPressure" class="control-label">Blood Pressure</label>
            <input asp-for="BloodPressure" class="form-control" />
            <span asp-validation-for="BloodPressure" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Pulse" class="control-label"></label>
            <input asp-for="Pulse" class="form-control" id="PulseInput" />
            <span asp-validation-for="Pulse" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Respiratory" class="control-label"></label>
            <input asp-for="Respiratory" class="form-control" />
            <span asp-validation-for="Respiratory" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BloodOxygen" class="control-label">Blood Oxygen</label>
            <input asp-for="BloodOxygen" class="form-control" id="BloodOxygenInput" />
            <span asp-validation-for="BloodOxygen" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="BloodGlucoseLevel" class="control-label">Blood Glucose Level</label>
            <input asp-for="BloodGlucoseLevel" class="form-control" />
            <span asp-validation-for="BloodGlucoseLevel" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="VitalTime" class="control-label">Vital Time</label>
            <input asp-for="VitalTime" class="form-control" type="time" />
            <span asp-validation-for="VitalTime" class="text-danger"></span>
        </div>
        <div class="form-group button-container">
            <input type="submit" value="Add" class="btn btn-primary" />
        </div>
    </form>
</div>
<div class="button-container">
    <a class="btn-link" asp-action="SurgeonAddPatientAllergy">Back</a>
</div>
<div class="button-container">
    <a class="btn-link" asp-action="SurgeonViewPatientVital">View Patient Vital</a>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var successMessage = document.getElementById("successMessage");
        if (successMessage) {
            // Ensure that the success message is visible
            successMessage.style.display = "block";
            console.log("Success message is visible");

            // Hide the success message after 3 seconds
            setTimeout(function () {
                successMessage.style.display = "none";
                console.log("Success message hidden");
            }, 3000); // Hide message after 3 seconds
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        var weightInput = document.querySelector("[name='Weight']");
        var heightInput = document.querySelector("[name='Height']");
        var bmiInput = document.getElementById("BMI");
        var temperatureInput = document.getElementById("TemperatureInput");
        var pulseInput = document.getElementById("PulseInput");
        var bloodOxygenInput = document.getElementById("BloodOxygenInput");

        // BMI calculation and alert
        function calculateBMI() {
            var weight = parseFloat(weightInput.value);
            var height = parseFloat(heightInput.value);

            if (!isNaN(weight) && !isNaN(height) && height > 0) {
                var bmi = weight / (height * height);
                bmi = bmi.toFixed(2); // Round BMI to 2 decimal places
                bmiInput.value = bmi;

                // Trigger alert if BMI is out of normal range
                if (bmi < 18.5 || bmi > 24.9) {
                    bmiInput.classList.add("alert-danger");
                    alert("BMI is outside the normal range (18.5 - 24.9). Please take action.");
                } else {
                    bmiInput.classList.remove("alert-danger");
                }
            } else {
                bmiInput.value = ''; // Clear BMI if inputs are invalid
            }
        }

        function handleBlur() {
            if (weightInput.value && heightInput.value) {
                calculateBMI(); // Only calculate BMI when both fields are filled
            }
        }

        weightInput.addEventListener("blur", handleBlur);
        heightInput.addEventListener("blur", handleBlur);

        // Temperature alert
        temperatureInput.addEventListener("blur", function () {
            var temperature = parseFloat(temperatureInput.value);

            if (!isNaN(temperature)) {
                if (temperature > 37 || temperature < 34) {
                    temperatureInput.classList.add("alert-danger");
                    alert("Temperature is out of the normal range (34 - 37°C). Please take action.");
                } else {
                    temperatureInput.classList.remove("alert-danger");
                }
            }
        });

        // Pulse alert
        pulseInput.addEventListener("blur", function () {
            var pulse = parseFloat(pulseInput.value);

            if (!isNaN(pulse)) {
                if (pulse > 100 || pulse < 60) {
                    pulseInput.classList.add("alert-danger");
                    alert("Pulse rate is out of the normal range (60 - 100 bpm). Please take action.");
                } else {
                    pulseInput.classList.remove("alert-danger");
                }
            }
        });

        // Blood Oxygen alert
        bloodOxygenInput.addEventListener("blur", function () {
            var bloodOxygen = parseFloat(bloodOxygenInput.value);

            if (!isNaN(bloodOxygen)) {
                if (bloodOxygen < 95) {
                    bloodOxygenInput.classList.add("alert-danger");
                    alert("Blood Oxygen level is below the normal range (95%). Please take action.");
                } else {
                    bloodOxygenInput.classList.remove("alert-danger");
                }
            }
        });
    });
</script>